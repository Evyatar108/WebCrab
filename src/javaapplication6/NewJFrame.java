/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package javaapplication6;
import java.awt.Toolkit;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.StringSelection;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import org.jsoup.Jsoup;
import org.jsoup.helper.Validate;
import org.jsoup.nodes.Document;
import org.jsoup.nodes.Element;
import org.jsoup.select.Elements;

import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Set;
import javax.swing.JFileChooser;

import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author Evyatar M
 */
public class NewJFrame extends javax.swing.JFrame {
 

    /**
     * Creates new form NewJFrame
     */
    public NewJFrame() {
        
        initComponents();
        URLs=0;
        TGS=0;
        
        regex=new HashMap<String,String>();
        myLinks=new HashSet<String>();
        myTargets=new HashSet<String>();
        MainTableModel = (DefaultTableModel) MainTable.getModel();
        SecondaryTableModel = (DefaultTableModel) SecondaryTable.getModel();
        LoadRegex();
         fc = new JFileChooser();
         
        
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        jButton3 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        MainTable = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        SecondaryTable = new javax.swing.JTable();
        startButton = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jSlider1 = new javax.swing.JSlider();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        removeRegexButton = new javax.swing.JButton();
        editRegexButton = new javax.swing.JButton();
        addRegexButton = new javax.swing.JButton();
        ComboRegex = new javax.swing.JComboBox<>();
        jPanel3 = new javax.swing.JPanel();
        label6 = new java.awt.Label();
        label1 = new java.awt.Label();
        label2 = new java.awt.Label();
        label3 = new java.awt.Label();
        label4 = new java.awt.Label();
        label5 = new java.awt.Label();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton3.setText("Add URL");
        jButton3.setToolTipText("");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        MainTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Url", "Targets", "Scanned"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        MainTable.setToolTipText("");
        MainTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MainTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(MainTable);

        SecondaryTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Target", "ID's of webpages", "Sum"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        SecondaryTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SecondaryTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(SecondaryTable);

        startButton.setText("Start");
        startButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startButtonActionPerformed(evt);
            }
        });

        jButton2.setText("Save Tables");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton5.setText("Clear");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("Load Tables");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jSlider1.setMaximum(10);
        jSlider1.setMinimum(1);
        jSlider1.setMinorTickSpacing(1);
        jSlider1.setPaintLabels(true);
        jSlider1.setPaintTicks(true);
        jSlider1.setSnapToTicks(true);
        jSlider1.setValue(1);
        jSlider1.setValueIsAdjusting(true);
        jSlider1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider1StateChanged(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Threads");
        jLabel1.setToolTipText("");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel2.setText("1");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addGap(72, 72, 72))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(33, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Threads", jPanel2);

        removeRegexButton.setText("remove");
        removeRegexButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeRegexButtonActionPerformed(evt);
            }
        });

        editRegexButton.setText("Edit");
        editRegexButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editRegexButtonActionPerformed(evt);
            }
        });

        addRegexButton.setText("Add");
        addRegexButton.setMaximumSize(new java.awt.Dimension(50, 23));
        addRegexButton.setMinimumSize(new java.awt.Dimension(50, 23));
        addRegexButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addRegexButtonActionPerformed(evt);
            }
        });

        ComboRegex.setToolTipText("");
        ComboRegex.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboRegexActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ComboRegex, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(editRegexButton)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(addRegexButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(removeRegexButton)))
                        .addGap(0, 74, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(28, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addRegexButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(removeRegexButton))
                .addGap(0, 0, 0)
                .addComponent(ComboRegex, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(editRegexButton)
                .addGap(23, 23, 23))
        );

        jTabbedPane1.addTab("Regex", jPanel1);

        label6.setAlignment(java.awt.Label.CENTER);
        label6.setText("0");

        label1.setText("Scanned");

        label2.setAlignment(java.awt.Label.CENTER);
        label2.setText("0");

        label3.setAlignment(java.awt.Label.CENTER);
        label3.setText("0");

        label4.setText("Targets");

        label5.setText("URLs");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(label5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(label2, javax.swing.GroupLayout.DEFAULT_SIZE, 137, Short.MAX_VALUE)
                    .addComponent(label6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(label3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(label6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(label2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(label5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(label4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(label3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Info", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(jButton2)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGap(64, 64, 64)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(startButton, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(10, 10, 10)
                                    .addComponent(jButton3)))
                            .addGap(67, 67, 67)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(82, 82, 82)
                        .addComponent(jButton5)))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(startButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 63, Short.MAX_VALUE)
                        .addComponent(jButton5)
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE)
                            .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );

        jTabbedPane1.getAccessibleContext().setAccessibleName("tab2");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        String url = WebContent.sanatizelink(JOptionPane.showInputDialog("Write a valid url"));
        url = WebContent.sanatizelink(url);
         if (myLinks.add(url)){
                MainTableModel.addRow(new Object[]{rowID,url,0,false});
                rowID++;
                
            } 
            
        
     //   MainTableModel.addRow(new Object[]{rowID,rowUrl,rowTargets,rowReferrer,rowScanned,rowSuccess);
        
        
       
    }//GEN-LAST:event_jButton3ActionPerformed

    private void startButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startButtonActionPerformed
        // TODO add your handling code here:
      //  System.out.println(MainTableModel.getValueAt(0, 1).toString());
        if (startButton.getText().equals("Start")){
            startButton.setText("Stop");
             stopLoop=false;
             jSlider1.setEnabled(false);
             ticket = new boolean[jSlider1.getValue()];
            for(int i=0;i<jSlider1.getValue();i++)
                Starter().start();
        }
        else {
            startButton.setText("Start");
            stopLoop=true;
            jSlider1.setEnabled(true);
        }
    }//GEN-LAST:event_startButtonActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       SaveData();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        LoadData();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void ComboRegexActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboRegexActionPerformed
    
    }//GEN-LAST:event_ComboRegexActionPerformed

    private void addRegexButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addRegexButtonActionPerformed
JTextField field1 = new JTextField();
JTextField field2 = new JTextField();
Object[] message = {
    "Name:", field1,
    "Regex:", field2,

};
int option = JOptionPane.showConfirmDialog(rootPane, message, "Enter all your values", JOptionPane.OK_CANCEL_OPTION);
if (option == JOptionPane.OK_OPTION)
{
    String regexName = field1.getText();
    String regexCode = field2.getText();
    regex.put(regexName, regexCode);
    ComboRegex.addItem(regexName);
    SaveRegex();
}      


    }//GEN-LAST:event_addRegexButtonActionPerformed

    private void removeRegexButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeRegexButtonActionPerformed
        if(ComboRegex.getItemCount()>1){
        regex.remove(ComboRegex.getSelectedItem().toString());
        ComboRegex.removeItem(ComboRegex.getSelectedItem());
        ComboRegex.actionPerformed(evt);
        SaveRegex();
        }
        else JOptionPane.showMessageDialog(rootPane, "Cant remove last regex");
        
    }//GEN-LAST:event_removeRegexButtonActionPerformed

    private void editRegexButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editRegexButtonActionPerformed
        String key = ComboRegex.getSelectedItem().toString();
        JTextField field1 = new JTextField();
        field1.setText(key);
        field1.setEnabled(false);
        JTextField field2 = new JTextField();
        field2.setText(regex.get(key));
        Object[] message = {"Name:", field1,"Regex:", field2,};
    int option = JOptionPane.showConfirmDialog(rootPane, message, "Enter all your values", JOptionPane.OK_CANCEL_OPTION);
    if (option == JOptionPane.OK_OPTION)
    {
        String regexName = field1.getText();
        String regexCode = field2.getText();
        regex.put(regexName, regexCode);
        ComboRegex.addItem(regexName);
        SaveRegex();
    }      


    }//GEN-LAST:event_editRegexButtonActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
    while(MainTableModel.getRowCount()!=0)
        MainTableModel.removeRow(0);
    while(SecondaryTableModel.getRowCount()!=0)
        SecondaryTableModel.removeRow(0);
        TGS=0;
    myLinks.removeAll(myLinks);
    myTargets.removeAll(myTargets);
    rowID=0;
      
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jSlider1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSlider1StateChanged
        jLabel2.setText(Integer.toString(jSlider1.getValue()));
    }//GEN-LAST:event_jSlider1StateChanged

    private void MainTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MainTableMouseClicked
     if(SwingUtilities.isRightMouseButton(evt)){
        StringSelection stringSelection = new StringSelection(MainTable.getValueAt(MainTable.getSelectedRow(), 1).toString());
        Clipboard clpbrd = Toolkit.getDefaultToolkit().getSystemClipboard();
        clpbrd.setContents(stringSelection, null);
     }
    }//GEN-LAST:event_MainTableMouseClicked

    private void SecondaryTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SecondaryTableMouseClicked
       try{
        if(SwingUtilities.isRightMouseButton(evt)){
        StringSelection stringSelection = new StringSelection(SecondaryTable.getValueAt(SecondaryTable.getSelectedRow(), 0).toString());
        Clipboard clpbrd = Toolkit.getDefaultToolkit().getSystemClipboard();
        clpbrd.setContents(stringSelection, null);
        }} catch(ArrayIndexOutOfBoundsException ex){
            
     }
    }//GEN-LAST:event_SecondaryTableMouseClicked

    /**
     * @param args the command line arguments
     */
    public void Run() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
            }
        });
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> ComboRegex;
    private javax.swing.JTable MainTable;
    private javax.swing.JTable SecondaryTable;
    private javax.swing.JButton addRegexButton;
    private javax.swing.JButton editRegexButton;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSlider jSlider1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private java.awt.Label label1;
    private java.awt.Label label2;
    private java.awt.Label label3;
    private java.awt.Label label4;
    private java.awt.Label label5;
    private java.awt.Label label6;
    private javax.swing.JButton removeRegexButton;
    private javax.swing.JButton startButton;
    // End of variables declaration//GEN-END:variables


    


    private void addLinkToTable(Set<String> linkSet){
        for (String link:linkSet){
            
            if (myLinks.add(link)){
                MainTableModel.addRow(new Object[]{rowID,link,0,false});
                rowID++;
                label6.setText(Integer.toString(rowID));
            } 
         }
                
                
    }
      
    private void addTargetstoTable(int ref,Set<String> emailSet){
        for (String email:emailSet){
            if (myTargets.add(email)){
                SecondaryTableModel.addRow(new Object[]{email,ref,1});
                
                label3.setText(Integer.toString(SecondaryTableModel.getRowCount()));
                
            } else {
                for(int i=0;i<SecondaryTableModel.getRowCount();i++)
                {
                    if(SecondaryTableModel.getValueAt(i, 0).toString().equals(email)) {
                        
                        SecondaryTableModel.setValueAt(SecondaryTableModel.getValueAt(i,1).toString()+", "+ref, i, 1); //adding the link ref to the email
                        SecondaryTableModel.setValueAt(Integer.parseInt(SecondaryTableModel.getValueAt(i,2).toString())+1, i, 2);
                    }
         }
    }
        }
    }
    
    private void LoadData() {
        
        fc.setApproveButtonText("Load");
        fc.setDialogTitle("Load Table Data");
        int returnVal = fc.showOpenDialog(this);

        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fc.getSelectedFile();
            //This is where a real application would open the file.

         try {
             if (file.exists()) {
         
                FileInputStream saveFile = new FileInputStream(file.getAbsolutePath());
                 ObjectInputStream save = new ObjectInputStream(saveFile);
                 MainTableHolder[] MainLoader = (MainTableHolder[]) save.readObject();
                 SecondaryTableHolder[] SecondaryLoader = (SecondaryTableHolder[]) save.readObject();
                 save.close();
                 saveFile.close();
                 rowID=MainLoader.length;
                 label6.setText(Integer.toString(rowID));
                 label3.setText(Integer.toString(SecondaryLoader.length));
                 for(int i=0;i<MainLoader.length;i++){
                    MainTableModel.addRow(new Object[]{i,MainLoader[i].getUrl(),MainLoader[i].getTargets(),MainLoader[i].getScanned()});    
                    if (MainLoader[i].getScanned()) TGS++;
                     
                 
                 }
                 label2.setText(Integer.toString(TGS));
                 for(int i=0;i<SecondaryLoader.length;i++){
                     SecondaryTableModel.addRow(new Object[]{SecondaryLoader[i].getTarget(),SecondaryLoader[i].getIds(),SecondaryLoader[i].getSum()});    
                  
                 }
                 
			}
             
             
         } catch (IOException ioexc){
             JOptionPane.showMessageDialog(rootPane, ioexc);
             
         }
         
         catch (ClassNotFoundException cnfexc){
             JOptionPane.showMessageDialog(rootPane, cnfexc);
        
    }
       
    }
        
    }   



    private void SaveRegex() {
          File file = new File("Regex.data");
        try {
             if (!file.exists()) {
				file.createNewFile();
			}

             FileOutputStream saveFile = new FileOutputStream("Regex.data");
             ObjectOutputStream save = new ObjectOutputStream(saveFile);
             
             save.writeObject(regex);
             save.close();
             saveFile.close();

             
        }
        catch (IOException ioex){
            JOptionPane.showMessageDialog(rootPane, ioex);
        }
        
       
            
        
    }

    private void LoadRegex() {
            File file = new File("Regex.data");
         try {
             if (file.exists()) {
         
                FileInputStream saveFile = new FileInputStream("Regex.data");
                 ObjectInputStream save = new ObjectInputStream(saveFile);
                regex=(HashMap) save.readObject();
                 save.close();
                 saveFile.close();
                 for (Map.Entry<String, String> rex : regex.entrySet())
                 {
                     ComboRegex.addItem(rex.getKey());
                 }
                
			} else { 
                                regex.put("Email", "[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+");
                                ComboRegex.addItem("Email");
             }
             
             
         } catch (IOException ioexc){
             JOptionPane.showMessageDialog(rootPane, ioexc);
             
         }
         
         catch (ClassNotFoundException cnfexc){
             JOptionPane.showMessageDialog(rootPane, cnfexc);
        
    }
       
        
    }
    
    
    
    private Thread Starter(){
         Thread t = new Thread(new Runnable(){    //we want to be able to stop the loop 
      @Override
      public void run(){
          int jump = jSlider1.getValue();         //how many skips each thread does to not step on the other threads's toes
          int num=0;
          for(int i=0;i<jump;i++){
              if (!ticket[i]){
                  num=i;                          //the first row the thread scans
                  ticket[i]=true;                 //making it known which n is taken by tickets
                  break;                  
              } 
          }
          System.out.println("Run"+num);
          WebContent webber = new WebContent(regex.get(ComboRegex.getSelectedItem().toString()));
         
              while(true)                                    //we check when there are enough rows for more threads
                  if(MainTable.getRowCount()>num) break;
              try {
              Thread.sleep(1000);
              }
              catch(InterruptedException exc){
                  System.out.println(exc);
              }
          
            //bug, at the start the link list isnt big enough
            for (int i=num;i<MainTable.getRowCount();i+=jump){   
                
                if (MainTableModel.getValueAt(i,3).equals(false)){
                    System.out.println(i +"is now scanning");
                    if (webber.Extract(MainTableModel.getValueAt(i, 1).toString())){   //we check if the webber succeeded
                        
                        int ref=Integer.parseInt(MainTableModel.getValueAt(i, 0).toString());  //we get the id for referrence
                        addLinkToTable(webber.getLinkSet());
                        addTargetstoTable(ref,webber.getTargetSet());
                        MainTableModel.setValueAt(true, i, 3);  //set to scanned
                        TGS++;
                        label2.setText(Integer.toString(TGS));
                        MainTableModel.setValueAt(webber.getCountTargets(), i, 2); //add the number of emails
                        
                    }
              
                } 
                
                if(stopLoop) break;
            }
            } 
        });
        return t;
    }

    

      private DefaultTableModel MainTableModel;
  private DefaultTableModel SecondaryTableModel;
  private Set<String>myLinks;
  private Set<String>myTargets;
  private Map<String,String>regex;
  private int URLs;
  private int TGS;
  final JFileChooser fc;
  
  int rowID;
  String rowUrl;
  int rowTargets;
  String rowReferrer;
  boolean rowScanned ;
  boolean stopLoop;
  boolean ticket[];

    private void SaveData() {

        fc.setApproveButtonText("Save");
        fc.setDialogTitle("Save Table Data");
        
        
        boolean gotFile=false;
       
        int returnVal = fc.showOpenDialog(this);

        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fc.getSelectedFile();
            if(file.getName().indexOf('.')==-1){
                file = new File(file.getAbsoluteFile()+".dat");
             }
            
        try {
             if (file.exists()) {
				if (JOptionPane.showConfirmDialog(rootPane, "Are you sure you want to overwrite "+file.getName()+"?")==0){
                                    gotFile =true;
                                };
                                 
			} else {
                          
                          file.createNewFile(); 
                            gotFile=true;
             }
             if (gotFile){
             
            
             MainTableHolder[] MainShadow = new MainTableHolder[MainTable.getRowCount()]; //creates an array in the size of table to store the data
             for(int i=0;i<MainShadow.length;i++){
                 // now inserting each row
                 MainShadow[i] = new MainTableHolder(i,MainTable.getValueAt(i,1).toString(),Integer.parseInt(MainTable.getValueAt(i,2).toString()),MainTable.getValueAt(i,3).equals(true));
             }
             
             
             
             SecondaryTableHolder[] SecondaryShadow = new SecondaryTableHolder[SecondaryTable.getRowCount()]; //creates an array in the size of table to store the data
             for(int i=0;i<SecondaryShadow.length;i++){
                 // now inserting each row
                 SecondaryShadow[i] = new SecondaryTableHolder(SecondaryTable.getValueAt(i, 0).toString(),SecondaryTable.getValueAt(i,1).toString(),Integer.parseInt(SecondaryTable.getValueAt(i,2).toString()));
             }
             
             FileOutputStream saveFile = new FileOutputStream(file.getAbsolutePath());
             ObjectOutputStream save = new ObjectOutputStream(saveFile);
             
             save.writeObject(MainShadow);
             
             save.writeObject(SecondaryShadow);
             
             save.close();
             
             saveFile.close();
             
             
             
             
        } }
        catch (IOException ioex){
            JOptionPane.showMessageDialog(rootPane, ioex);
        }
        
       
        
        }
       
            
        
        
    }

}